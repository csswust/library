<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zjl.library.dao.BookInfoDao" >
    <resultMap id="BaseResultMap" type="com.zjl.library.entity.BookInfo" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="title" property="title" jdbcType="VARCHAR" />
        <result column="image" property="image" jdbcType="VARCHAR" />
        <result column="author" property="author" jdbcType="VARCHAR" />
        <result column="press_time" property="pressTime" jdbcType="TIMESTAMP" />
        <result column="press" property="press" jdbcType="VARCHAR" />
        <result column="second_id" property="secondId" jdbcType="INTEGER" />
        <result column="money" property="money" jdbcType="DOUBLE" />
        <result column="price" property="price" jdbcType="DOUBLE" />
        <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
        <result column="book_size" property="bookSize" jdbcType="INTEGER" />
        <result column="book_page" property="bookPage" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.zjl.library.entity.BookInfo" extends="BaseResultMap" >
        <result column="book_introduction" property="bookIntroduction" jdbcType="LONGVARCHAR" />
        <result column="book_special" property="bookSpecial" jdbcType="LONGVARCHAR" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, title, image, author, press_time, press, second_id, money, price, ISBN, book_size, 
        book_page, create_time, modify_time
    </sql>
    <sql id="Blob_Column_List" >
        book_introduction, book_special
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from book_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from book_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.zjl.library.entity.BookInfo" useGeneratedKeys="true" keyProperty="id" >
        insert into book_info (title, image, author, 
            press_time, press, second_id, 
            money, price, ISBN, 
            book_size, book_page, create_time, 
            modify_time, book_introduction, book_special
            )
        values (#{title,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
            #{pressTime,jdbcType=TIMESTAMP}, #{press,jdbcType=VARCHAR}, #{secondId,jdbcType=INTEGER}, 
            #{money,jdbcType=DOUBLE}, #{price,jdbcType=DOUBLE}, #{isbn,jdbcType=VARCHAR}, 
            #{bookSize,jdbcType=INTEGER}, #{bookPage,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
            #{modifyTime,jdbcType=TIMESTAMP}, #{bookIntroduction,jdbcType=LONGVARCHAR}, #{bookSpecial,jdbcType=LONGVARCHAR}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.zjl.library.entity.BookInfo" useGeneratedKeys="true" keyProperty="id" >
        insert into book_info
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="title != null" >
                title,
            </if>
            <if test="image != null" >
                image,
            </if>
            <if test="author != null" >
                author,
            </if>
            <if test="pressTime != null" >
                press_time,
            </if>
            <if test="press != null" >
                press,
            </if>
            <if test="secondId != null" >
                second_id,
            </if>
            <if test="money != null" >
                money,
            </if>
            <if test="price != null" >
                price,
            </if>
            <if test="isbn != null" >
                ISBN,
            </if>
            <if test="bookSize != null" >
                book_size,
            </if>
            <if test="bookPage != null" >
                book_page,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="bookIntroduction != null" >
                book_introduction,
            </if>
            <if test="bookSpecial != null" >
                book_special,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="author != null" >
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="pressTime != null" >
                #{pressTime,jdbcType=TIMESTAMP},
            </if>
            <if test="press != null" >
                #{press,jdbcType=VARCHAR},
            </if>
            <if test="secondId != null" >
                #{secondId,jdbcType=INTEGER},
            </if>
            <if test="money != null" >
                #{money,jdbcType=DOUBLE},
            </if>
            <if test="price != null" >
                #{price,jdbcType=DOUBLE},
            </if>
            <if test="isbn != null" >
                #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="bookSize != null" >
                #{bookSize,jdbcType=INTEGER},
            </if>
            <if test="bookPage != null" >
                #{bookPage,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bookIntroduction != null" >
                #{bookIntroduction,jdbcType=LONGVARCHAR},
            </if>
            <if test="bookSpecial != null" >
                #{bookSpecial,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.zjl.library.entity.BookInfo" >
        update book_info
        <set >
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="image != null" >
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="author != null" >
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="pressTime != null" >
                press_time = #{pressTime,jdbcType=TIMESTAMP},
            </if>
            <if test="press != null" >
                press = #{press,jdbcType=VARCHAR},
            </if>
            <if test="secondId != null" >
                second_id = #{secondId,jdbcType=INTEGER},
            </if>
            <if test="money != null" >
                money = #{money,jdbcType=DOUBLE},
            </if>
            <if test="price != null" >
                price = #{price,jdbcType=DOUBLE},
            </if>
            <if test="isbn != null" >
                ISBN = #{isbn,jdbcType=VARCHAR},
            </if>
            <if test="bookSize != null" >
                book_size = #{bookSize,jdbcType=INTEGER},
            </if>
            <if test="bookPage != null" >
                book_page = #{bookPage,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="bookIntroduction != null" >
                book_introduction = #{bookIntroduction,jdbcType=LONGVARCHAR},
            </if>
            <if test="bookSpecial != null" >
                book_special = #{bookSpecial,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zjl.library.entity.BookInfo" >
        update book_info
        set title = #{title,jdbcType=VARCHAR},
            image = #{image,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            press_time = #{pressTime,jdbcType=TIMESTAMP},
            press = #{press,jdbcType=VARCHAR},
            second_id = #{secondId,jdbcType=INTEGER},
            money = #{money,jdbcType=DOUBLE},
            price = #{price,jdbcType=DOUBLE},
            ISBN = #{isbn,jdbcType=VARCHAR},
            book_size = #{bookSize,jdbcType=INTEGER},
            book_page = #{bookPage,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            book_introduction = #{bookIntroduction,jdbcType=LONGVARCHAR},
            book_special = #{bookSpecial,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zjl.library.entity.BookInfo" >
        update book_info
        set title = #{title,jdbcType=VARCHAR},
            image = #{image,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            press_time = #{pressTime,jdbcType=TIMESTAMP},
            press = #{press,jdbcType=VARCHAR},
            second_id = #{secondId,jdbcType=INTEGER},
            money = #{money,jdbcType=DOUBLE},
            price = #{price,jdbcType=DOUBLE},
            ISBN = #{isbn,jdbcType=VARCHAR},
            book_size = #{bookSize,jdbcType=INTEGER},
            book_page = #{bookPage,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>